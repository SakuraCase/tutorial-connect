package service

import (
	"context"
	"fmt"
	"log"
	"time"

	"connectrpc.com/connect"

	greetv1 "example/gen/greet/v1" // generated by protoc-gen-go
)

type GreetServer struct{}

func (s *GreetServer) Greet(
	ctx context.Context,
	req *connect.Request[greetv1.GreetRequest],
) (*connect.Response[greetv1.GreetResponse], error) {
	log.Println("Request headers: ", req.Header())
	res := connect.NewResponse(&greetv1.GreetResponse{
		Greeting: fmt.Sprintf("Hello, %s!", req.Msg.Name),
	})
	res.Header().Set("Greet-Version", "v1")
	return res, nil
}

func (s *GreetServer) StreamGreet(
	ctx context.Context,
	req *connect.Request[greetv1.GreetRequest],
	res *connect.ServerStream[greetv1.GreetResponse],
) error {
	log.Println("Request headers: ", req.Header())
	res.ResponseHeader().Set("Greet-Version", "v1")
	for i := 0; i < 5; i++ {
		err := res.Send(&greetv1.GreetResponse{
			Greeting: fmt.Sprintf("Hello, %s!", req.Msg.Name),
		})
		if err != nil {
			return err
		}

		time.Sleep(time.Second * 1)
	}

	return nil
}
